name: Daily Census Report Generation

on:
  schedule:
    # Run at 00:00 UTC every day (midnight UTC)
    # This is 03:00 Athens time during summer (UTC+3)
    # and 02:00 Athens time during winter (UTC+2)
    - cron: '0 0 * * *'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  actions: write

jobs:
  generate-report:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create .env.local file
        run: |
          echo "ETORO_API_KEY=${{ secrets.ETORO_API_KEY }}" > .env.local
          echo "ETORO_USER_KEY=${{ secrets.ETORO_USER_KEY }}" >> .env.local
          # Verify the file was created
          echo "Created .env.local with:"
          wc -l .env.local
          
      - name: Build Next.js application
        run: npm run build
      
      - name: Start Next.js server
        run: |
          npm start &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          # Wait for server to be ready
          sleep 10
          # Check if server is running
          curl -f http://localhost:3000 || exit 1
      
      - name: Generate census report
        run: |
          # Call the optimized report endpoint with 1500 investors
          curl -X POST http://localhost:3000/api/optimized-report \
            -H "Content-Type: application/json" \
            -d '{"period": "CurrYear", "maxInvestors": 1500}' \
            --no-buffer \
            --silent \
            --show-error \
            --fail-with-body \
            -w "\n\nHTTP Status: %{http_code}\n" | while IFS= read -r line; do
              echo "$line"
              # Check if this is the complete event with the report URL
              if echo "$line" | grep -q '"type":"complete"'; then
                # Extract the URLs from the JSON
                REPORT_URL=$(echo "$line" | sed -n 's/.*"reportUrl":"\([^"]*\)".*/\1/p')
                DATA_URL=$(echo "$line" | sed -n 's/.*"dataUrl":"\([^"]*\)".*/\1/p')
                echo "Report generated at: $REPORT_URL"
                echo "Data saved at: $DATA_URL"
              fi
            done
      
      - name: Stop Next.js server
        if: always()
        run: |
          if [ ! -z "$SERVER_PID" ]; then
            kill $SERVER_PID || true
          fi
      
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions Bot"
      
      - name: Commit and push reports with deployment trigger
        run: |
          # Add reports and JSON files
          git add public/reports/*.html public/data/*.json
          
          # Add deployment trigger file
          echo "$(date -u +'%Y-%m-%d %H:%M:%S UTC')" > .github/last-deployment-trigger
          git add .github/last-deployment-trigger
          
          # Commit everything together if there are changes
          git diff --staged --quiet || {
            COMMIT_MSG="Daily census report - $(date -u +'%Y-%m-%d %H:%M UTC')"
            git commit -m "$COMMIT_MSG"
            git push
            echo "✅ Reports committed and pushed - this should trigger GitHub Pages deployment automatically"
          }
      
      - name: Trigger GitHub Pages deployment
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Trigger the deploy-pages workflow
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-pages.yml',
              ref: 'master'
            });
            console.log('✅ Triggered GitHub Pages deployment workflow');
      
